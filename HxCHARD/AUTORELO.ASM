;
;	AUTORELO/ASM		;Auto Relocator
;

*MOD
BRK	DEFL	0		;Enable breakpoints

;-----	Relocate internal references in driver.
;	IN	IX = parameters block ptr
;		(IX+0:IX+1) = old start
;		(IX+2:IX+3) = old end
;		(IX+4:IX+5) = new end
;		(IX+6:IX+7) = seg list
;		IY = relocation list ptr
AUTORELO:
	$BREAK	AUTORELO	;NO OTHER BREAK IN AUTORELO !!
	LD	(RELOSAVEIX),IX
	LD	L,(IX+4)	;new end to HL
	LD	H,(IX+5)
	LD	E,(IX+6)	;seg list
	LD	D,(IX+7)
	PUSH	DE
	POP	IY		;  to IY
	LD	E,(IX+2)	;old end to DE
	LD	D,(IX+3)
	SUB	A		;Clear carry flag
	SBC	HL,DE		;calc offset = new end - old end
	LD	B,H		;Move offset to BC
	LD	C,L
RLOOP0:	LD	L,(IY)		;Get start of code block
	LD	H,(IY+1)
	LD	A,H
	OR	L
	RET	Z
;	$$BREAK
	LD	IX,RELOFLAGS
	RES	0,(IX)
RLOOP1:
	LD	E,(IY+2)	;get end of code block
	LD	D,(IY+3)
	CALL	CPHLDE
	JP	NC,RELONEXT
	PUSH	HL		;RET here
	LD	HL,RLOOP1
	EX	(SP),HL
	LD	A,(HL)
	INC	HL
	OR	A
	JR	NZ,RLOOP2
;	$BREAK			;NO LABEL
	LD	IX,RELOFLAGS
	SET	0,(IX)		;indicate skip next mod
	RET			;JR RLOOP1
RLOOP2:
	CP	76H		;Halt = skip zstring
	JR	NZ,RLOOP3
RLOOP21:
	LD	A,(HL)
	INC	HL
	OR	A
	RET	Z		;JR Z,RLOOP1 - end of string
	CALL	CPHLDE
	JR	C,RLOOP21
	RET
RLOOP3:
	CALL	RELOSETTEST
	CP	0DDH
	JP	Z,RELODDFD	;IX
	CP	0FDH
	JP	Z,RELODDFD	;IY
	CP	0EDH
	JP	Z,RELOED	;ED prefix
	CP	0CBH
	JP	Z,RELOCB	;CB prefix
	LD	IX,XZWORD
	CALL	RELOTEST	;Word arg?
	JR	Z,RELONOWORD
RELOWORD:
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	DEC	HL
	EX	DE,HL
	PUSH	DE
	LD	IX,RELOFLAGS
	BIT	0,(IX)		;skip bit set?
	JR	NZ,RELOSKIP	;if yes
	LD	IX,(RELOSAVEIX)
	LD	E,(IX+0)
	LD	D,(IX+1)
	CALL	CPHLDE		;before area begin?
	JR	C,RELOSKIP	;if yes
	LD	E,(IX+2)
	LD	D,(IX+3)
	CALL	CPHLDE		;after area end?
	JR	NC,RELOSKIP	;if yes
	ADD	HL,BC		;add offset
RELOSKIP:
	POP	DE
	EX	DE,HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL
	LD	IX,RELOFLAGS
	RES	0,(IX)
	RET			;JR RLOOP1
RELONOWORD:
	LD	IX,XZBYTE
	CALL	RELOTEST	;Byte arg?
	RET	Z		;JR Z,RLOOP1
	INC	HL		;skip arg
	RET			;JR RLOOP1
;	DD/FD prefix
RELODDFD:
	LD	A,(HL)
	INC	HL
	CP	0EDH
	JR	Z,RELOED
	CP	0CBH
	JR	NZ,RELODDFDNOCB
	INC	HL
;	CB prefix
RELOCB:
	INC	HL
	RET
;	DD/FD - no CB prefix
RELODDFDNOCB:
	CALL	RELOSETTEST
	LD	IX,XZWORD
	CALL	RELOTEST	;word arg?
	JP	NZ,RELOWORD	;if yes
	LD	IX,XZDDI
;	$$BREAK
	CALL	RELOTEST	;index?
	RET	Z		;if no
	INC	HL		;skip next byte
	JR	RELONOWORD	;test if byte arg
;	ED prefix
RELOED:
	LD	A,(HL)
	INC	HL
	CALL	RELOSETTEST
	LD	IX,XZEDWORD
	CALL	RELOTEST	;word arg?
	JP	NZ,RELOWORD	;if yes
	RET

RELONEXT:
	INC	IY
	INC	IY
	INC	IY
	INC	IY
	JP	RLOOP0		;Loop till done

;-----	Setup Bit Test in RELOTEST
RELOSETTEST:
	LD	E,A
	NEG
	ADD	A,7
	AND	7
	RLCA
	RLCA
	RLCA
	OR	46H		;BIT 0,(HL)
	LD	(RELOTEST+3),A	;store bit address
	LD	A,E
	RRCA
	RRCA
	RRCA
	AND	1FH
	LD	(RELOTEST+2),A	;store offset
	LD	A,E
	RET

;-----	Test bit b at AX+n
RELOTEST:
	BIT	0,(IX)		;DDCBnnCC
	RET


RELOSAVEIX:
	DS	2
RELOFLAGS:
	DS	1

;	$ALIGN	7

;-----	Z80 relocation tables
XZWORD:	;table of opcodes with two bytes arg
	;	01234567  89ABCDEF
	DB	01000000B,00000000B	;0
	DB	01000000B,00000000B	;1
	DB	01100000B,00100000B	;2
	DB	01100000B,00100000B	;3
	DB	00000000B,00000000B	;4
	DB	00000000B,00000000B	;5
	DB	00000000B,00000000B	;6
	DB	00000000B,00000000B	;7
	DB	00000000B,00000000B	;8
	DB	00000000B,00000000B	;9
	DB	00000000B,00000000B	;A
	DB	00000000B,00000000B	;B
	DB	00111000B,00101100B	;C
	DB	00101000B,00101000B	;D
	DB	00101000B,00101000B	;E
	DB	00101000B,00101000B	;F
XZBYTE:	;table of opcodes with one byte arg
	;	01234567  89ABCDEF
	DB	00000010B,00000010B	;0
	DB	10000010B,10000010B	;1
	DB	10000010B,10000010B	;2
	DB	10000010B,10000010B	;3
	DB	00000000B,00000000B	;4
	DB	00000000B,00000000B	;5
	DB	00000000B,00000000B	;6
	DB	00000000B,00000000B	;7
	DB	00000000B,00000000B	;8
	DB	00000000B,00000000B	;9
	DB	00000000B,00000000B	;A
	DB	00000000B,00000000B	;B
	DB	00000010B,00000010B	;C
	DB	00010010B,00010010B	;D
	DB	00000010B,00000010B	;E
	DB	00000010B,00000010B	;F
XZDDI:	;table of DD/FD opcodes with index
	;	01234567  89ABCDEF
	DB	00000000B,00000000B	;0
	DB	00000000B,00000000B	;1
	DB	00000000B,00000000B	;2
	DB	00001110B,00000000B	;3
	DB	00000010B,00000010B	;4
	DB	00000010B,00000010B	;5
	DB	00000010B,00000010B	;6
	DB	11111101B,00000010B	;7
	DB	00000010B,00000010B	;8
	DB	00000010B,00000010B	;9
	DB	00000010B,00000010B	;A
	DB	00000010B,00000010B	;B
	DB	00000000B,00000000B	;C
	DB	00000000B,00000000B	;D
	DB	00000000B,00000000B	;E
	DB	00000000B,00000000B	;F
XZEDWORD: ;table of ED opcodes with two bytes arg
	;	01234567  89ABCDEF
	DB	00000000B,00000000B	;0
	DB	00000000B,00000000B	;1
	DB	00000000B,00000000B	;2
	DB	00000000B,00000000B	;3
	DB	00010000B,00010000B	;4
	DB	00010000B,00010000B	;5
	DB	00000000B,00000000B	;6
	DB	00010000B,00010000B	;7
	DB	00000000B,00000000B	;8
	DB	00000000B,00000000B	;9
	DB	00000000B,00000000B	;A
	DB	00000000B,00000000B	;B
	DB	00000000B,00000000B	;C
	DB	00000000B,00000000B	;D
	DB	00000000B,00000000B	;E
	DB	00000000B,00000000B	;F


	END
